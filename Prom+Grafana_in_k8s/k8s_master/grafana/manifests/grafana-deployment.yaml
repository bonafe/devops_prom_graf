apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 -v convert
    kompose.controller.type: deployment
    kompose.service.nodeport.port: "30300"
    kompose.service.type: nodeport
    kompose.version: 1.21.0 (992df58d8)
  labels:
    application: grafana
    allow.http: "false"
  name: grafana
spec:
  replicas: 2
  selector:
    matchLabels:
      application: grafana
  template:
    metadata:
      labels:
          application: grafana
    spec:
      containers:
      - image: grafana/grafana:7.5.4
        name: grafana
        volumeMounts:
        - mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
          name: grafana-configmap-volume
        - mountPath: /var/lib/grafana
          name: grafana-data
        - mountPath: /etc/grafana/provisioning/
          name: grafana-provisioning
      restartPolicy: Always
      volumes:
      - name: grafana-configmap-volume
        configMap:
          name: grafana-configmap
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-data
      - name: grafana-provisioning
        persistentVolumeClaim:
          claimName: grafana-provisioning

---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: grafana
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: default
spec:
  rules:
    - host: grafana.rancher.devopsgiz33.cf
      http:
        paths:
          - backend:
              serviceName: grafana
              servicePort: 80
